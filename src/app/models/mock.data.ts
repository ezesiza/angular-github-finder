export const mockRepoList = [
    {
        "id": "102",
        "node_id": "MDEwOlJlcG9zaXRvcnkxMDI=",
        "name": "gsa-prototype",
        "url": "https://api.github.com/repos/jnewland/gsa-prototype",
        "stargazers_count": "13",
        "stargazers_url": "https://api.github.com/repos/jnewland/gsa-prototype/stargazers",
        "watchers_count": "13",
        "open_issues_count": "0",
        "forks_count": "11",
        "owner": {
            "login": "jnewland",
            "__typename": "Owner"
        },
        "created_at": "2008-01-25T03:17:08Z",
        "full_name": "jnewland/gsa-prototype",
        "closed_issues": null,
        "pulls_url": "https://api.github.com/repos/jnewland/gsa-prototype/pulls{/number}",
        "open_issues_url": null,
        "description": "Prototype/Javascript wrapper for the Google Search Appliance Search Protocol. Fancy cross-domain JSON support included.",
        "__typename": "RepoList"
    },
    {
        "id": "105",
        "node_id": "MDEwOlJlcG9zaXRvcnkxMDU=",
        "name": "duplikate",
        "url": "https://api.github.com/repos/technoweenie/duplikate",
        "stargazers_count": "25",
        "stargazers_url": "https://api.github.com/repos/technoweenie/duplikate/stargazers",
        "watchers_count": "25",
        "open_issues_count": "0",
        "forks_count": "7",
        "owner": {
            "login": "technoweenie",
            "__typename": "Owner"
        },
        "created_at": "2008-01-25T20:21:40Z",
        "full_name": "technoweenie/duplikate",
        "closed_issues": null,
        "pulls_url": "https://api.github.com/repos/technoweenie/duplikate/pulls{/number}",
        "open_issues_url": null,
        "description": "Syncs one directory to another (example: a git project to an svn repo)",
        "__typename": "RepoList"
    },
    {
        "id": "118",
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTg=",
        "name": "lazy_record",
        "url": "https://api.github.com/repos/jnewland/lazy_record",
        "stargazers_count": "13",
        "stargazers_url": "https://api.github.com/repos/jnewland/lazy_record/stargazers",
        "watchers_count": "13",
        "open_issues_count": "0",
        "forks_count": "8",
        "owner": {
            "login": "jnewland",
            "__typename": "Owner"
        },
        "created_at": "2008-01-27T02:42:01Z",
        "full_name": "jnewland/lazy_record",
        "closed_issues": null,
        "pulls_url": "https://api.github.com/repos/jnewland/lazy_record/pulls{/number}",
        "open_issues_url": null,
        "description": "Proof of concept Lazy-Loading for ActiveRecord. Inspired by the 'kickers' of Ambition.",
        "__typename": "RepoList"
    },
    {
        "id": "119",
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTk=",
        "name": "gsa-feeds",
        "url": "https://api.github.com/repos/jnewland/gsa-feeds",
        "stargazers_count": "7",
        "stargazers_url": "https://api.github.com/repos/jnewland/gsa-feeds/stargazers",
        "watchers_count": "7",
        "open_issues_count": "0",
        "forks_count": "9",
        "owner": {
            "login": "jnewland",
            "__typename": "Owner"
        },
        "created_at": "2008-01-27T02:47:54Z",
        "full_name": "jnewland/gsa-feeds",
        "closed_issues": null,
        "pulls_url": "https://api.github.com/repos/jnewland/gsa-feeds/pulls{/number}",
        "open_issues_url": null,
        "description": "A Ruby wrapper for the Google Search Appliance Feeds Protocol",
        "__typename": "RepoList"
    },
]


export const mockRepoDetails = {
    "id": "144",
    "name": "chronic",
    "full_name": "mojombo/chronic",
    "private": "false",
    "html_url": "https://github.com/mojombo/chronic",
    "description": "Chronic is a pure Ruby natural language date parser.",
    "fork": "false",
    "url": "https://api.github.com/repos/mojombo/chronic",
    "issue_events_url": "https://api.github.com/repos/mojombo/chronic/issues/events{/number}",
    "events_url": "https://api.github.com/repos/mojombo/chronic/events",
    "statuses_url": "https://api.github.com/repos/mojombo/chronic/statuses/{sha}",
    "stargazers_url": "https://api.github.com/repos/mojombo/chronic/stargazers",
    "comments_url": "https://api.github.com/repos/mojombo/chronic/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/mojombo/chronic/issues/comments{/number}",
    "issues_url": "https://api.github.com/repos/mojombo/chronic/issues{/number}",
    "pulls_url": "https://api.github.com/repos/mojombo/chronic/pulls{/number}",
    "labels_url": "https://api.github.com/repos/mojombo/chronic/labels{/name}",
    "git_url": "git://github.com/mojombo/chronic.git",
    "homepage": "http://injekt.github.com/chronic",
    "stargazers_count": "3209",
    "watchers_count": "3209",
    "has_issues": "true",
    "forks_count": "457",
    "mirror_url": null,
    "archived": "false",
    "disabled": "false",
    "open_issues_count": "142",
    "license": null,
    "forks": "457",
    "open_issues_url": null,
    "closed_issues": null,
    "watchers": "3209",
    "__typename": "RepoList"
}

export const mockRepoIssues = [
    {
        "url": "https://api.github.com/repos/mojombo/chronic/issues/412",
        "repository_url": "https://api.github.com/repos/mojombo/chronic",
        "labels_url": "https://api.github.com/repos/mojombo/chronic/issues/412/labels{/name}",
        "comments_url": "https://api.github.com/repos/mojombo/chronic/issues/412/comments",
        "events_url": "https://api.github.com/repos/mojombo/chronic/issues/412/events",
        "html_url": "https://github.com/mojombo/chronic/issues/412",
        "id": "1704304224",
        "node_id": "I_kwDMkM5llZ5g",
        "number": "412",
        "title": "New stable release?",
        "user": {
            "login": "carlwiedemann",
            "id": "350855",
            "avatar_url": "https://avatars.githubusercontent.com/u/350855?v=4",
            "url": "https://api.github.com/users/carlwiedemann",
            "__typename": "User"
        },
        "labels": [],
        "state": "open",
        "comments": "1",
        "created_at": "2023-05-10T16:51:04Z",
        "pull_request": null,
        "body": "Hi folks,\r\n\r\nLooks like this gem has not had an official release in a decade. Yet I see some activity in the repo, and CI is running on latest stable for Ruby 3.x.\r\n\r\nAny chance in cutting a new, official release soon?\r\n\r\ncc @davispuh ",
        "__typename": "Issues"
    },
    {
        "url": "https://api.github.com/repos/mojombo/chronic/issues/411",
        "repository_url": "https://api.github.com/repos/mojombo/chronic",
        "labels_url": "https://api.github.com/repos/mojombo/chronic/issues/411/labels{/name}",
        "comments_url": "https://api.github.com/repos/mojombo/chronic/issues/411/comments",
        "events_url": "https://api.github.com/repos/mojombo/chronic/issues/411/events",
        "html_url": "https://github.com/mojombo/chronic/issues/411",
        "id": "1652930215",
        "node_id": "I_kwDMkM5ihban",
        "number": "411",
        "title": "Can't set time_class to Date",
        "user": {
            "login": "jgomo3",
            "id": "1125678",
            "avatar_url": "https://avatars.githubusercontent.com/u/1125678?v=4",
            "url": "https://api.github.com/users/jgomo3",
            "__typename": "User"
        },
        "labels": [],
        "state": "open",
        "comments": "0",
        "created_at": "2023-04-03T23:49:31Z",
        "pull_request": null,
        "body": "This line [1] suggest that one could use `Date` as the `time_class`. But if you do, then this other line fails[2] because the class `Date` doesn't have the `now` method.\r\n\r\nYou would think that the option `:now` would work, but line[3] fails as it doesn't use this option.\r\n\r\n```\r\nrequire 'date'\r\nrequire 'chronic'\r\nChronic.time_class = Date\r\nChronic.parse('2000 January 1st', now: Time.now)\r\n```\r\n\r\nError:\r\n\r\n```\r\nTraceback (most recent call last):\r\n       11: from bin/console:14:in `<main>'\r\n       10: from (irb):5\r\n        9: from /home/monkey/.rvm/gems/ruby-2.7.2/gems/chronic-0.10.2/lib/chronic.rb:90:in `parse'\r\n        8: from /home/monkey/.rvm/gems/ruby-2.7.2/gems/chronic-0.10.2/lib/chronic/parser.rb:60:in `parse'\r\n        7: from /home/monkey/.rvm/gems/ruby-2.7.2/gems/chronic-0.10.2/lib/chronic/parser.rb:228:in `tokenize'\r\n        6: from /home/monkey/.rvm/gems/ruby-2.7.2/gems/chronic-0.10.2/lib/chronic/parser.rb:228:in `each'\r\n        5: from /home/monkey/.rvm/gems/ruby-2.7.2/gems/chronic-0.10.2/lib/chronic/parser.rb:229:in `block in tokenize'\r\n        4: from /home/monkey/.rvm/gems/ruby-2.7.2/gems/chronic-0.10.2/lib/chronic/ordinal.rb:12:in `scan'\r\n        3: from /home/monkey/.rvm/gems/ruby-2.7.2/gems/chronic-0.10.2/lib/chronic/ordinal.rb:12:in `each_index'\r\n        2: from /home/monkey/.rvm/gems/ruby-2.7.2/gems/chronic-0.10.2/lib/chronic/ordinal.rb:19:in `block in scan'\r\n        1: from /home/monkey/.rvm/gems/ruby-2.7.2/gems/chronic-0.10.2/lib/chronic/date.rb:66:in `make_year'\r\nNoMethodError (undefined method `now' for Date:Class)\r\nDid you mean?  new\r\n```\r\n\r\n[1] https://github.com/mojombo/chronic/blob/master/lib/chronic.rb#L145\r\n[2] https://github.com/mojombo/chronic/blob/master/lib/chronic/parser.rb#L60\r\n[3] https://github.com/mojombo/chronic/blob/master/lib/chronic/date.rb#L65",
        "__typename": "Issues"
    },
    {
        "url": "https://api.github.com/repos/mojombo/chronic/issues/410",
        "repository_url": "https://api.github.com/repos/mojombo/chronic",
        "labels_url": "https://api.github.com/repos/mojombo/chronic/issues/410/labels{/name}",
        "comments_url": "https://api.github.com/repos/mojombo/chronic/issues/410/comments",
        "events_url": "https://api.github.com/repos/mojombo/chronic/issues/410/events",
        "html_url": "https://github.com/mojombo/chronic/issues/410",
        "id": "1568800427",
        "node_id": "I_kwDMkM5dgf6r",
        "number": "410",
        "title": "Chronic doesn't take into consideration 1st date of the month when computing `nth day this month`",
        "user": {
            "login": "zoras",
            "id": "365783",
            "avatar_url": "https://avatars.githubusercontent.com/u/365783?v=4",
            "url": "https://api.github.com/users/zoras",
            "__typename": "User"
        },
        "labels": [],
        "state": "open",
        "comments": "0",
        "created_at": "2023-02-02T21:22:57Z",
        "pull_request": null,
        "body": "Problem: When 1st date of the month falls on the same day where we query `nth day this month`, then 1st date day is ignored.\r\n\r\nChronic Gem version: `0.10.2`\r\n\r\nDemo:\r\n=====\r\n\r\nFor December 2020, there are 5 Tuesdays as seen in calendar below:\r\n\r\n```[zsh]\r\n$ cal 12 2020\r\n   December 2020\r\nSu Mo Tu We Th Fr Sa\r\n       1  2  3  4  5\r\n 6  7  8  9 10 11 12\r\n13 14 15 16 17 18 19\r\n20 21 22 23 24 25 26\r\n27 28 29 30 31\r\n```\r\n\r\n```[ruby]\r\n$ irb\r\nirb(main):001:0> require 'chronic'\r\n=> true\r\nirb(main):002:0> date=Date.new(2020,12,1)\r\n=> #<Date: 2020-12-01 ((2459185j,0s,0n),+0s,2299161j)>\r\nirb(main):003:0> date.strftime('%A')\r\n=> \"Tuesday\"\r\nirb(main):004:0> Chronic.parse('1st tuesday this month', now: date)\r\n=> 2020-12-08 12:00:00 +0100\r\nirb(main):005:0> Chronic.parse('2th tuesday this month', now: date)\r\n=> 2020-12-15 12:00:00 +0100\r\nirb(main):006:0> Chronic.parse('3rd tuesday this month', now: date)\r\n=> 2020-12-22 12:00:00 +0100\r\nirb(main):007:0> Chronic.parse('4th tuesday this month', now: date)\r\n=> 2020-12-29 12:00:00 +0100\r\nirb(main):008:0> Chronic.parse('5th tuesday this month', now: date)\r\n=> nil\r\nirb(main):009:0> Chronic.parse('last tuesday this month', now: date)\r\n=> nil\r\n```\r\nHere chronic doesn't know 1st date is the 1st Tuesday. Chronic assumes there are only 4 Tuesdays on the month instead of 5.\r\n\r\nAnother example for November 2020, where 1st date of the month falls on a Sunday.\r\n\r\n```[zsh]\r\n$ cal 11 2020\r\n   November 2020\r\nSu Mo Tu We Th Fr Sa\r\n 1  2  3  4  5  6  7\r\n 8  9 10 11 12 13 14\r\n15 16 17 18 19 20 21\r\n22 23 24 25 26 27 28\r\n29 30\r\n```\r\n\r\n```[ruby]\r\nirb(main):011:0> date=Date.new(2020,11,1)\r\n=> #<Date: 2020-11-01 ((2459155j,0s,0n),+0s,2299161j)>\r\nirb(main):012:0> Chronic.parse('1st tuesday this month', now: date)\r\n=> 2020-11-03 12:00:00 +0100\r\nirb(main):013:0> Chronic.parse('1st sunday this month', now: date)\r\n=> 2020-11-08 12:00:00 +0100\r\nirb(main):014:0> Chronic.parse('2nd sunday this month', now: date)\r\n=> 2020-11-15 12:00:00 +0100\r\nirb(main):015:0> Chronic.parse('3rd sunday this month', now: date)\r\n=> 2020-11-22 12:00:00 +0100\r\nirb(main):016:0> Chronic.parse('4th sunday this month', now: date)\r\n=> 2020-11-29 12:00:00 +0100\r\nirb(main):017:0> Chronic.parse('5th sunday this month', now: date)\r\n=> nil\r\n```\r\n\r\nHere, chronic returns 3rd date as 1st Tuesday but misses the fact that 1st Sunday is 1st date of the month. Please also note that this month has 5 Sundays as well and not 4.",
        "__typename": "Issues"
    },
]
